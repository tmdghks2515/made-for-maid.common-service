plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.4'
}

group = 'io.madeformaid'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	mavenLocal()

	maven {
		name = "GitHubPackages"
		url = uri("https://maven.pkg.github.com/tmdghks2515/made-for-maid.shared-lib")
		credentials {
			username = project.findProperty("gpr.user")
			password = project.findProperty("gpr.key")
		}
	}
	maven {
		name = "GitHubPackages"
		url = uri("https://maven.pkg.github.com/tmdghks2515/made-for-maid.webmvc-lib")
		credentials {
			username = project.findProperty("gpr.user")
			password = project.findProperty("gpr.key")
		}
	}
}

ext {
	set('springGrpcVersion', "0.6.0")
	set('springCloudVersion', "2024.0.1")
}

configurations {
	protoFiles {
		canBeResolved = true
		canBeConsumed = false
	}
}

dependencies {
	implementation 'io.madeformaid:shared-lib:0.0.1-SNAPSHOT'
	implementation 'io.madeformaid:webmvc-lib:0.0.1-SNAPSHOT'
	protoFiles 'io.madeformaid:proto-files:0.0.1-SNAPSHOT'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.grpc:grpc-services'
	implementation 'org.springframework.grpc:spring-grpc-server-web-spring-boot-starter'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation platform("software.amazon.awssdk:bom:2.25.1")
	implementation 'software.amazon.awssdk:s3'
	compileOnly 'org.projectlombok:lombok:1.18.30'
	compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5' // proto ÌÅ¥ÎûòÏä§ ÏÉùÏÑ±Ïãú @Generated Ïñ¥ÎÖ∏ÌÖåÏù¥ÏÖòÏúºÎ°ú Ïù∏Ìï¥ Î∞úÏÉùÌïòÎäî Ïò§Î•ò Ìï¥Í≤∞ Ìï¥Ï§å
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.grpc:spring-grpc-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.grpc:spring-grpc-dependencies:${springGrpcVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

/* grpc proto ÏÑ§Ï†ïÎ∂Ä - START */
// üì¶ proto JAR Ï∂îÏ∂ú Í≤ΩÎ°ú ÏÑ§Ï†ï
def extractedProtoDir = layout.buildDirectory.dir("proto-extracted").get().asFile

// üì• proto JARÏóêÏÑú .protoÎßå Ï∂îÏ∂ú
tasks.register('extractProtoFiles', Copy) {
	from { configurations.protoFiles.collect { zipTree(it) } }
	include '**/*.proto'
	into extractedProtoDir
}

// üìÅ sourceSetsÏóê proto ÏÑ§Ï†ï (generateProto Ï†ÑÏóê Îì±Î°ùÎèºÏïº Ìï®)
sourceSets.main.proto.srcDir extractedProtoDir

// üß© ÏùòÏ°¥ÏÑ± Ïó∞Í≤∞
tasks.named('generateProto') { dependsOn 'extractProtoFiles' }
tasks.named('processResources') { dependsOn 'extractProtoFiles' }

// ‚öôÔ∏è protobuf stub ÏÉùÏÑ± ÏÑ§Ï†ï
protobuf {
	protoc { artifact = "com.google.protobuf:protoc:3.25.2" }
	plugins {
		grpc { artifact = "io.grpc:protoc-gen-grpc-java:1.62.2" }
	}
	generateProtoTasks {
		all().each { task ->
			task.builtins { java {} }
			task.plugins { grpc {} }
		}
	}
}
/* grpc proto ÏÑ§Ï†ïÎ∂Ä - END */

// generateProto Ï†ÑÏóê proto Ï∂îÏ∂ú
tasks.named('generateProto') { dependsOn 'extractProtoFiles' }
tasks.named('processResources') { dependsOn 'extractProtoFiles' }

tasks.named('test') {
	useJUnitPlatform()
}
